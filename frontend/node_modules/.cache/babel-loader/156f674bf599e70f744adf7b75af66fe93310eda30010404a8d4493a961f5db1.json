{"ast":null,"code":"import{createContext,useContext,useState,useEffect}from\"react\";import{getCookie}from\"../utils/cookies\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);// On mount, restore session from backend\nuseEffect(()=>{const fetchUser=async()=>{try{const res=await fetch(\"http://localhost:8000/auth/me/\",{method:\"GET\",credentials:\"include\"});if(!res.ok)throw new Error(\"Not authenticated\");const data=await res.json();setUser({username:data.username,email:data.email});}catch(err){setUser(null);}};fetchUser();},[]);const login=async _ref2=>{let{username,password}=_ref2;try{const response=await fetch(\"http://localhost:8000/auth/login/\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"X-CSRFToken\":getCookie(\"csrftoken\")},body:JSON.stringify({username,password}),credentials:\"include\"});const data=await response.json();if(!response.ok)throw new Error(data.error||\"Login failed\");const meRes=await fetch(\"http://localhost:8000/auth/me/\",{credentials:\"include\"});const meData=await meRes.json();setUser({username:meData.username,email:meData.email});return true;}catch(err){throw err;}};const logout=async()=>{await fetch(\"http://localhost:8000/auth/logout/\",{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\",\"X-CSRFToken\":getCookie(\"csrftoken\")}});setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["createContext","useContext","useState","useEffect","getCookie","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","fetchUser","res","fetch","method","credentials","ok","Error","data","json","username","email","err","login","_ref2","password","response","headers","body","JSON","stringify","error","meRes","meData","logout","Provider","value","useAuth"],"sources":["/home/ubuntu/EmberLight_Projecte2/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport { getCookie } from \"../utils/cookies\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  // On mount, restore session from backend\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await fetch(\"http://localhost:8000/auth/me/\", {\n          method: \"GET\",\n          credentials: \"include\",\n        });\n        if (!res.ok) throw new Error(\"Not authenticated\");\n\n        const data = await res.json();\n        setUser({\n          username: data.username,\n          email: data.email,\n        });\n      } catch (err) {\n        setUser(null);\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  const login = async ({ username, password }) => {\n    try {\n      const response = await fetch(\"http://localhost:8000/auth/login/\", {\n        method: \"POST\",\n        headers: { \n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": getCookie(\"csrftoken\"), \n        },\n        body: JSON.stringify({ username, password }),\n        credentials: \"include\",\n      });\n\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.error || \"Login failed\");\n\n      const meRes = await fetch(\"http://localhost:8000/auth/me/\", {\n        credentials: \"include\",\n      });\n      const meData = await meRes.json();\n\n      setUser({\n        username: meData.username,\n        email: meData.email,\n      });\n\n      return true;\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const logout = async () => {\n    await fetch(\"http://localhost:8000/auth/logout/\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: { \n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": getCookie(\"csrftoken\"), \n      },\n    });\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}