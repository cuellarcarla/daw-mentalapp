{"ast":null,"code":"import{useState,useEffect}from\"react\";import io from\"socket.io-client\";import\"./Community.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io(\"http://localhost:5000\");function Community(){const[posts,setPosts]=useState([]);const[title,setTitle]=useState(\"\");const[content,setContent]=useState(\"\");useEffect(()=>{fetch(\"http://localhost:5000/api/posts\").then(res=>res.json()).then(data=>setPosts(data)).catch(err=>console.error(\"Error fetching posts:\",err));socket.on(\"new_post\",newPost=>{setPosts(prevPosts=>[newPost,...prevPosts]);});return()=>{socket.off(\"new_post\");};},[]);const handleSubmit=async e=>{e.preventDefault();await fetch(\"http://localhost:5000/api/posts\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({title,content})});setTitle(\"\");setContent(\"\");//window.location.reload();\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Community Posts\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{value:title,onChange:e=>setTitle(e.target.value),placeholder:\"Title\",required:true}),/*#__PURE__*/_jsx(\"input\",{value:content,onChange:e=>setContent(e.target.value),placeholder:\"Content\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Post\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:posts.map(post=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:post.title}),\": \",post.content]},post.id))})]});}export default Community;","map":{"version":3,"names":["useState","useEffect","io","jsx","_jsx","jsxs","_jsxs","socket","Community","posts","setPosts","title","setTitle","content","setContent","fetch","then","res","json","data","catch","err","console","error","on","newPost","prevPosts","off","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","children","onSubmit","value","onChange","target","placeholder","required","type","map","post","id"],"sources":["/home/ubuntu/EmberLight_Projecte2/frontend/src/pages/Community.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./Community.css\";\n\nconst socket = io(\"http://localhost:5000\");\n\nfunction Community() {    \n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/posts\")\n      .then(res => res.json())\n      .then(data => setPosts(data))\n      .catch(err => console.error(\"Error fetching posts:\", err));\n\n    socket.on(\"new_post\", (newPost) => {\n      setPosts(prevPosts => [newPost, ...prevPosts]);\n    });\n\n    return () => {\n      socket.off(\"new_post\");\n    };\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    await fetch(\"http://localhost:5000/api/posts\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ title, content })\n    });\n\n    setTitle(\"\");\n    setContent(\"\");\n    //window.location.reload();\n  };\n\n  return (\n    <div>\n      <h1>Community Posts</h1>\n      <form onSubmit={handleSubmit}>\n        <input value={title} onChange={e => setTitle(e.target.value)} placeholder=\"Title\" required />\n        <input value={content} onChange={e => setContent(e.target.value)} placeholder=\"Content\" required />\n        <button type=\"submit\">Post</button>\n      </form>\n      <ul>\n        {posts.map(post => (\n          <li key={post.id}><strong>{post.title}</strong>: {post.content}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Community;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CACjC,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,MAAM,CAAGL,EAAE,CAAC,uBAAuB,CAAC,CAE1C,QAAS,CAAAM,SAASA,CAAA,CAAG,CACnB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACdc,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,EAAIT,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,EAAIC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAEF,GAAG,CAAC,CAAC,CAE5Dd,MAAM,CAACiB,EAAE,CAAC,UAAU,CAAGC,OAAO,EAAK,CACjCf,QAAQ,CAACgB,SAAS,EAAI,CAACD,OAAO,CAAE,GAAGC,SAAS,CAAC,CAAC,CAChD,CAAC,CAAC,CAEF,MAAO,IAAM,CACXnB,MAAM,CAACoB,GAAG,CAAC,UAAU,CAAC,CACxB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAf,KAAK,CAAC,iCAAiC,CAAE,CAC7CgB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAExB,KAAK,CAAEE,OAAQ,CAAC,CACzC,CAAC,CAAC,CAEFD,QAAQ,CAAC,EAAE,CAAC,CACZE,UAAU,CAAC,EAAE,CAAC,CACd;AACF,CAAC,CAED,mBACER,KAAA,QAAA8B,QAAA,eACEhC,IAAA,OAAAgC,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxB9B,KAAA,SAAM+B,QAAQ,CAAET,YAAa,CAAAQ,QAAA,eAC3BhC,IAAA,UAAOkC,KAAK,CAAE3B,KAAM,CAAC4B,QAAQ,CAAEV,CAAC,EAAIjB,QAAQ,CAACiB,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,OAAO,CAACC,QAAQ,MAAE,CAAC,cAC7FtC,IAAA,UAAOkC,KAAK,CAAEzB,OAAQ,CAAC0B,QAAQ,CAAEV,CAAC,EAAIf,UAAU,CAACe,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,SAAS,CAACC,QAAQ,MAAE,CAAC,cACnGtC,IAAA,WAAQuC,IAAI,CAAC,QAAQ,CAAAP,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC/B,CAAC,cACPhC,IAAA,OAAAgC,QAAA,CACG3B,KAAK,CAACmC,GAAG,CAACC,IAAI,eACbvC,KAAA,OAAA8B,QAAA,eAAkBhC,IAAA,WAAAgC,QAAA,CAASS,IAAI,CAAClC,KAAK,CAAS,CAAC,KAAE,CAACkC,IAAI,CAAChC,OAAO,GAArDgC,IAAI,CAACC,EAAqD,CACpE,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAAtC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}